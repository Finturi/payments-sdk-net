using System;
using System.Linq;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using CM.Payments.Client.Model;
using System.Reflection;
using CM.Payments.Client.Enums;

//<auto-generated>
//	IMPORTANT NOTE:
//	This code is generated by MessageUnitTestGenerator in this project.
//	Date and time: 06-04-2018 14:52:27
//
//	Changes to this file may cause incorrect behavior and will be lost on the next code generation.
//</auto-generated>
namespace CM.Payments.Client.Test
{
	[TestClass, ExcludeFromCodeCoverage]
	public partial class BancontactDetailsResponseTests : BaseJsonConvertTests
	{
		public TestContext TestContext { get; set; }

		[TestMethod]
		public void BancontactDetailsResponse()
		{
			var obj = new BancontactDetailsResponse
			{
				AuthenticationUrl = "Lorum_649",
				CallbackUrl = "Lorum_503",
				CancelledUrl = "Lorum_888",
				ExpiredUrl = "Lorum_48",
				FailedUrl = "Lorum_619",
				Issuer = "Lorum_539",
				Issuers = new []
				{
					"Lorum_694",
					"Lorum_412"
				},
				MaskedPan = "Lorum_940",
				PurchaseId = "Lorum_508",
				ReasonForFailure = "Lorum_900",
				SuccessUrl = "Lorum_166"
			};
			var deserialized = ConversionTest(obj);
			Assert.IsNotNull(deserialized);
			Assert.AreEqual(obj.AuthenticationUrl, deserialized.AuthenticationUrl);
			Assert.AreEqual(obj.CallbackUrl, deserialized.CallbackUrl);
			Assert.AreEqual(obj.CancelledUrl, deserialized.CancelledUrl);
			Assert.AreEqual(obj.ExpiredUrl, deserialized.ExpiredUrl);
			Assert.AreEqual(obj.FailedUrl, deserialized.FailedUrl);
			Assert.AreEqual(obj.Issuer, deserialized.Issuer);
			Assert.AreEqual(obj.Issuers.IsFixedSize, deserialized.Issuers.IsFixedSize);
			Assert.AreEqual(obj.Issuers.IsReadOnly, deserialized.Issuers.IsReadOnly);
			Assert.AreEqual(obj.Issuers.IsSynchronized, deserialized.Issuers.IsSynchronized);
			Assert.AreEqual(obj.Issuers.Length, deserialized.Issuers.Length);
			Assert.AreEqual(obj.Issuers.LongLength, deserialized.Issuers.LongLength);
			Assert.AreEqual(obj.Issuers.Rank, deserialized.Issuers.Rank);
			Assert.AreEqual(obj.MaskedPan, deserialized.MaskedPan);
			Assert.AreEqual(obj.PurchaseId, deserialized.PurchaseId);
			Assert.AreEqual(obj.ReasonForFailure, deserialized.ReasonForFailure);
			Assert.AreEqual(obj.SuccessUrl, deserialized.SuccessUrl);
		}
	}
}
