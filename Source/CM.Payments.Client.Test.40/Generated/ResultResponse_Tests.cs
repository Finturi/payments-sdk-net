using System;
using System.Linq;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using CM.Payments.Client.Model;
using CM.Payments.Client.Enums;

//<auto-generated>
//	IMPORTANT NOTE:
//	This code is generated by MessageUnitTestGenerator in this project.
//	Date and time: 06-04-2018 14:52:28
//
//	Changes to this file may cause incorrect behavior and will be lost on the next code generation.
//</auto-generated>
namespace CM.Payments.Client.Test
{
	[TestClass, ExcludeFromCodeCoverage]
	public partial class ResultResponseTests : BaseJsonConvertTests
	{
		public TestContext TestContext { get; set; }

		[TestMethod]
		public void ResultResponse()
		{
			var obj = new AfterPayDetailsResponse.ResultResponse
			{
				Checksum = "Lorum_585",
				OrderReference = "Lorum_816",
				ResultId = 28,
				StatusCode = "Lorum_80",
				TimestampIn = "Lorum_977",
				TimestampOut = "Lorum_464",
				TotalInvoicedAmount = 41,
				TotalReservedAmount = 16,
				TransactionId = "Lorum_467"
			};
			var deserialized = ConversionTest(obj);
			Assert.IsNotNull(deserialized);
			Assert.AreEqual(obj.Checksum, deserialized.Checksum);
			Assert.AreEqual(obj.OrderReference, deserialized.OrderReference);
			Assert.AreEqual(obj.ResultId, deserialized.ResultId);
			Assert.AreEqual(obj.StatusCode, deserialized.StatusCode);
			Assert.AreEqual(obj.TimestampIn, deserialized.TimestampIn);
			Assert.AreEqual(obj.TimestampOut, deserialized.TimestampOut);
			Assert.AreEqual(obj.TotalInvoicedAmount, deserialized.TotalInvoicedAmount);
			Assert.AreEqual(obj.TotalReservedAmount, deserialized.TotalReservedAmount);
			Assert.AreEqual(obj.TransactionId, deserialized.TransactionId);
		}
	}
}
