using System;
using System.Linq;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using CM.Payments.Client.Model;
using CM.Payments.Client.Enums;

//<auto-generated>
//	IMPORTANT NOTE:
//	This code is generated by MessageUnitTestGenerator in this project.
//	Date and time: 06-04-2018 14:52:28
//
//	Changes to this file may cause incorrect behavior and will be lost on the next code generation.
//</auto-generated>
namespace CM.Payments.Client.Test
{
	[TestClass, ExcludeFromCodeCoverage]
	public partial class ReferencePersonTests : BaseJsonConvertTests
	{
		public TestContext TestContext { get; set; }

		[TestMethod]
		public void ReferencePerson()
		{
			var obj = new AfterPayDetailsRequest.OrderAddress.ReferencePerson
			{
				DateOfBirth = DateTime.Now,
				EmailAddress = "Lorum_444",
				Gender = "Lorum_920",
				Initials = "Lorum_848",
				IsoLanguage = "Lorum_904",
				LastName = "Lorum_569",
				PhoneNumber1 = "Lorum_738",
				PhoneNumber2 = "Lorum_666"
			};
			var deserialized = ConversionTest(obj);
			Assert.IsNotNull(deserialized);
			// Check only date and time up to seconds.. Json.NET does not save milliseconds.
			Assert.AreEqual(
				new DateTime(obj.DateOfBirth.Year, obj.DateOfBirth.Month, obj.DateOfBirth.Day, obj.DateOfBirth.Hour, obj.DateOfBirth.Minute, obj.DateOfBirth.Second),
				new DateTime(deserialized.DateOfBirth.Year, deserialized.DateOfBirth.Month, deserialized.DateOfBirth.Day, deserialized.DateOfBirth.Hour, deserialized.DateOfBirth.Minute, deserialized.DateOfBirth.Second));
			Assert.AreEqual(obj.EmailAddress, deserialized.EmailAddress);
			Assert.AreEqual(obj.Gender, deserialized.Gender);
			Assert.AreEqual(obj.Initials, deserialized.Initials);
			Assert.AreEqual(obj.IsoLanguage, deserialized.IsoLanguage);
			Assert.AreEqual(obj.LastName, deserialized.LastName);
			Assert.AreEqual(obj.PhoneNumber1, deserialized.PhoneNumber1);
			Assert.AreEqual(obj.PhoneNumber2, deserialized.PhoneNumber2);
		}
	}
}
