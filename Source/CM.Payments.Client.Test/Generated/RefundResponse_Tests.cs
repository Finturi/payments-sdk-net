using System;
using System.Linq;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using CM.Payments.Client.Model;
using CM.Payments.Client.Enums;

//<auto-generated>
//	IMPORTANT NOTE:
//	This code is generated by MessageUnitTestGenerator in this project.
//	Date and time: 06-04-2018 14:52:28
//
//	Changes to this file may cause incorrect behavior and will be lost on the next code generation.
//</auto-generated>
namespace CM.Payments.Client.Test
{
	[TestClass, ExcludeFromCodeCoverage]
	public partial class RefundResponseTests : BaseJsonConvertTests
	{
		public TestContext TestContext { get; set; }

		[TestMethod]
		public void RefundResponse()
		{
			var obj = new RefundResponse
			{
				Amount = 94,
				CreatedAt = DateTime.Now,
				Currency = "Lorum_738",
				Details = new RefundDetailsResponse
				{
					CreditTransactionReference = "Lorum_819",
					CreditTransactionStatus = "Lorum_245",
					DebitTransactionReference = "Lorum_69",
					DebitTransactionStatus = "Lorum_850",
					PurchaseId = "Lorum_305",
					RefundBic = "Lorum_982",
					RefundIban = "Lorum_429",
					RefundName = "Lorum_453"
				},
				PaymentId = "Lorum_289",
				Reason = "Lorum_316",
				RefundId = "Lorum_947",
				Status = "Lorum_702",
				Test = false,
				UpdatedAt = DateTime.Now
			};
			var deserialized = ConversionTest(obj);
			Assert.IsNotNull(deserialized);
			Assert.AreEqual(obj.Amount, deserialized.Amount);
			// Check only date and time up to seconds.. Json.NET does not save milliseconds.
			Assert.AreEqual(
				new DateTime(obj.CreatedAt.Year, obj.CreatedAt.Month, obj.CreatedAt.Day, obj.CreatedAt.Hour, obj.CreatedAt.Minute, obj.CreatedAt.Second),
				new DateTime(deserialized.CreatedAt.Year, deserialized.CreatedAt.Month, deserialized.CreatedAt.Day, deserialized.CreatedAt.Hour, deserialized.CreatedAt.Minute, deserialized.CreatedAt.Second));
			Assert.AreEqual(obj.Currency, deserialized.Currency);
			Assert.AreEqual(obj.Details.CreditTransactionReference, deserialized.Details.CreditTransactionReference);
			Assert.AreEqual(obj.Details.CreditTransactionStatus, deserialized.Details.CreditTransactionStatus);
			Assert.AreEqual(obj.Details.DebitTransactionReference, deserialized.Details.DebitTransactionReference);
			Assert.AreEqual(obj.Details.DebitTransactionStatus, deserialized.Details.DebitTransactionStatus);
			Assert.AreEqual(obj.Details.PurchaseId, deserialized.Details.PurchaseId);
			Assert.AreEqual(obj.Details.RefundBic, deserialized.Details.RefundBic);
			Assert.AreEqual(obj.Details.RefundIban, deserialized.Details.RefundIban);
			Assert.AreEqual(obj.Details.RefundName, deserialized.Details.RefundName);
			Assert.AreEqual(obj.PaymentId, deserialized.PaymentId);
			Assert.AreEqual(obj.Reason, deserialized.Reason);
			Assert.AreEqual(obj.RefundId, deserialized.RefundId);
			Assert.AreEqual(obj.Status, deserialized.Status);
			Assert.AreEqual(obj.Test, deserialized.Test);
			// Check only date and time up to seconds.. Json.NET does not save milliseconds.
			Assert.AreEqual(
				new DateTime(obj.UpdatedAt.Year, obj.UpdatedAt.Month, obj.UpdatedAt.Day, obj.UpdatedAt.Hour, obj.UpdatedAt.Minute, obj.UpdatedAt.Second),
				new DateTime(deserialized.UpdatedAt.Year, deserialized.UpdatedAt.Month, deserialized.UpdatedAt.Day, deserialized.UpdatedAt.Hour, deserialized.UpdatedAt.Minute, deserialized.UpdatedAt.Second));
		}
	}
}
